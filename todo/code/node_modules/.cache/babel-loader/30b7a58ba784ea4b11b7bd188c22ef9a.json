{"ast":null,"code":"var _jsxFileName = \"/Users/mv/Downloads/REACT/youtube/src/App.js\";\nimport React, { useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\n\nfunction App() {\n  const [todos, setTodos] = useState([{\n    id: 1,\n    completed: false,\n    title: \"Gym\"\n  }, {\n    id: 2,\n    completed: false,\n    title: \"Bike\"\n  }, {\n    id: 3,\n    completed: false,\n    title: \"Work\"\n  }]);\n\n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      removeTodo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"REACT\"), todos.length ? /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onToggle: toggleTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \" No tasks\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mv/Downloads/REACT/youtube/src/App.js"],"names":["React","useState","TodoList","Context","App","todos","setTodos","id","completed","title","toggleTodo","map","todo","removeTodo","filter","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;AAAEM,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,KAApB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GADiC,EAEjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,KAApB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAFiC,EAGjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,KAApB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAHiC,CAAD,CAAlC;;AAMA,WAASC,UAAT,CAAoBH,EAApB,EAAwB;AACtBD,IAAAA,QAAQ,CACND,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AAClB,UAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAClBK,QAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACD;;AACD,aAAOI,IAAP;AACD,KALD,CADM,CAAR;AAQD;;AAED,WAASC,UAAT,CAAoBN,EAApB,EAAwB;AACtBD,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD;;AAED,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGR,KAAK,CAACU,MAAN,gBACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEV,KAAjB;AAAwB,IAAA,QAAQ,EAAEK,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CADF,CADF;AAYD;;AAED,eAAeN,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { id: 1, completed: false, title: \"Gym\" },\n    { id: 2, completed: false, title: \"Bike\" },\n    { id: 3, completed: false, title: \"Work\" },\n  ]);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>REACT</h1>\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : (\n          <p> No tasks</p>\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}